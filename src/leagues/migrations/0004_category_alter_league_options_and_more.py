# Generated by Django 5.1.6 on 2025-02-14 21:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('leagues', '0003_alter_league_governing_body_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('age_range', models.JSONField(blank=True, null=True, verbose_name='age range')),
                ('gender', models.CharField(blank=True, max_length=20, verbose_name='gender')),
                ('skill_level', models.CharField(blank=True, max_length=50, verbose_name='skill level')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.AlterModelOptions(
            name='league',
            options={'ordering': ['-start_date'], 'verbose_name': 'league', 'verbose_name_plural': 'leagues'},
        ),
        migrations.RemoveField(
            model_name='league',
            name='historical_records',
        ),
        migrations.RemoveField(
            model_name='league',
            name='seasonal_statistics',
        ),
        migrations.AddField(
            model_name='league',
            name='registration_open',
            field=models.BooleanField(default=False, verbose_name='registration open'),
        ),
        migrations.AddField(
            model_name='league',
            name='rules_and_regulations',
            field=models.JSONField(default=dict, verbose_name='rules and regulations'),
        ),
        migrations.AlterField(
            model_name='league',
            name='administrators',
            field=models.ManyToManyField(related_name='administered_leagues', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='league',
            name='athletes',
            field=models.ManyToManyField(limit_choices_to={'roles__contains': ['ATHLETE']}, related_name='athlete_leagues', to=settings.AUTH_USER_MODEL),
        ),
        migrations.RemoveField(
            model_name='league',
            name='categories',
        ),
        migrations.AlterField(
            model_name='league',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='created at'),
        ),
        migrations.AlterField(
            model_name='league',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_leagues', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='league',
            name='description',
            field=models.TextField(blank=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='league',
            name='end_date',
            field=models.DateField(null=True, verbose_name='end date'),
        ),
        migrations.AlterField(
            model_name='league',
            name='governing_body',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='governing body'),
        ),
        migrations.AlterField(
            model_name='league',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='active'),
        ),
        migrations.AlterField(
            model_name='league',
            name='name',
            field=models.CharField(max_length=255, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='league',
            name='officials',
            field=models.ManyToManyField(limit_choices_to={'roles__contains': ['OFFICIAL']}, related_name='official_leagues', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='league',
            name='qualification_criteria',
            field=models.JSONField(default=dict, verbose_name='qualification criteria'),
        ),
        migrations.AlterField(
            model_name='league',
            name='ranking_system',
            field=models.JSONField(default=dict, verbose_name='ranking system configuration'),
        ),
        migrations.AlterField(
            model_name='league',
            name='sanctioning_body',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='sanctioning body'),
        ),
        migrations.AlterField(
            model_name='league',
            name='start_date',
            field=models.DateField(null=True, verbose_name='start date'),
        ),
        migrations.AlterField(
            model_name='league',
            name='status',
            field=models.CharField(default='draft', max_length=20, verbose_name='status'),
        ),
        migrations.AlterField(
            model_name='league',
            name='technical_delegates',
            field=models.ManyToManyField(limit_choices_to={'roles__contains': ['TECH_DELEGATE']}, related_name='delegate_leagues', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='league',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='updated at'),
        ),
        migrations.CreateModel(
            name='LeagueDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('document_type', models.CharField(max_length=50, verbose_name='document type')),
                ('file_url', models.URLField(verbose_name='file URL')),
                ('version', models.CharField(max_length=20, verbose_name='version')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='uploaded at')),
                ('is_public', models.BooleanField(default=False, verbose_name='public')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='leagues.league')),
            ],
            options={
                'verbose_name': 'league document',
                'verbose_name_plural': 'league documents',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='LeagueSponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('logo', models.URLField(verbose_name='logo URL')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('sponsorship_level', models.CharField(max_length=50, verbose_name='sponsorship level')),
                ('sponsorship_details', models.JSONField(verbose_name='sponsorship details')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sponsors', to='leagues.league')),
            ],
            options={
                'verbose_name': 'league sponsor',
                'verbose_name_plural': 'league sponsors',
            },
        ),
        migrations.AddField(
            model_name='league',
            name='categories',
            field=models.ManyToManyField(related_name='leagues', to='leagues.category'),
        ),
        migrations.CreateModel(
            name='LeagueRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0, verbose_name='points')),
                ('ranking', models.IntegerField(verbose_name='ranking')),
                ('competitions_attended', models.IntegerField(default=0, verbose_name='competitions attended')),
                ('best_results', models.JSONField(default=list, verbose_name='best results')),
                ('statistics', models.JSONField(default=dict, verbose_name='statistics')),
                ('athlete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leagues.category')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rankings', to='leagues.league')),
            ],
            options={
                'verbose_name': 'league ranking',
                'verbose_name_plural': 'league rankings',
                'ordering': ['category', 'ranking'],
                'unique_together': {('league', 'athlete', 'category')},
            },
        ),
    ]
