# Generated by Django 5.1.6 on 2025-02-14 21:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('competitions', '0002_competitionregistration_competitionresult_and_more'),
        ('leagues', '0004_category_alter_league_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('SCRAMBLE', 'Scramble'), ('JUDGED_SCRAMBLE', 'Judged Scramble'), ('QUALIFICATIONS_LEAD', 'Qualifications Lead'), ('QUALIFICATIONS_COMBINED', 'Qualifications Combined'), ('SEMIFINALS_5', 'Semi-finals 5'), ('SEMIFINALS_4', 'Semi-finals 4'), ('SEMIFINALS_LEAD', 'Semi-finals Lead'), ('SEMIFINALS_COMBINED', 'Semi-finals Combined'), ('FINALS_4', 'Finals 4'), ('FINALS_5', 'Finals 5'), ('FINALS_LEAD', 'Finals Lead'), ('FINALS_COMBINED', 'Finals Combined')], max_length=50, verbose_name='event type')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('start_time', models.DateTimeField(null=True, verbose_name='start time')),
                ('end_time', models.DateTimeField(null=True, verbose_name='end time')),
                ('isolation_start', models.DateTimeField(blank=True, null=True, verbose_name='isolation start')),
                ('isolation_end', models.DateTimeField(blank=True, null=True, verbose_name='isolation end')),
                ('location', models.JSONField(default=dict, verbose_name='location')),
                ('route_info', models.JSONField(blank=True, null=True, verbose_name='route information')),
                ('starting_order', models.JSONField(blank=True, null=True, verbose_name='starting order')),
                ('scoring_rules', models.JSONField(default=dict, verbose_name='scoring rules')),
                ('safety_requirements', models.JSONField(default=dict, verbose_name='safety requirements')),
                ('status', models.CharField(default='scheduled', max_length=20, verbose_name='status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('categories', models.ManyToManyField(related_name='events', to='leagues.category')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='competitions.competition')),
                ('officials', models.ManyToManyField(limit_choices_to={'roles__contains': ['OFFICIAL']}, related_name='officiating_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'event',
                'verbose_name_plural': 'events',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='EventIncident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_time', models.DateTimeField(verbose_name='incident time')),
                ('incident_type', models.CharField(max_length=50, verbose_name='incident type')),
                ('description', models.TextField(verbose_name='description')),
                ('severity', models.CharField(max_length=20, verbose_name='severity')),
                ('status', models.CharField(default='reported', max_length=20, verbose_name='status')),
                ('resolution', models.TextField(blank=True, verbose_name='resolution')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='resolved at')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidents', to='events.event')),
                ('reported_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_incidents', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_incidents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'event incident',
                'verbose_name_plural': 'event incidents',
                'ordering': ['-incident_time'],
            },
        ),
        migrations.CreateModel(
            name='EventParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starting_position', models.IntegerField(blank=True, null=True, verbose_name='starting position')),
                ('status', models.CharField(default='registered', max_length=20, verbose_name='status')),
                ('check_in_time', models.DateTimeField(blank=True, null=True, verbose_name='check in time')),
                ('attempts', models.JSONField(default=list, verbose_name='attempts')),
                ('best_result', models.JSONField(blank=True, null=True, verbose_name='best result')),
                ('final_ranking', models.IntegerField(blank=True, null=True, verbose_name='final ranking')),
                ('athlete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leagues.category')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
            ],
            options={
                'verbose_name': 'event participation',
                'verbose_name_plural': 'event participations',
                'ordering': ['category', 'starting_position'],
                'unique_together': {('event', 'athlete', 'category')},
            },
        ),
        migrations.AddField(
            model_name='event',
            name='athletes',
            field=models.ManyToManyField(related_name='events', through='events.EventParticipation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='EventScheduleChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_start', models.DateTimeField(verbose_name='previous start time')),
                ('new_start', models.DateTimeField(verbose_name='new start time')),
                ('previous_end', models.DateTimeField(verbose_name='previous end time')),
                ('new_end', models.DateTimeField(verbose_name='new end time')),
                ('reason', models.TextField(verbose_name='reason for change')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('notification_sent', models.BooleanField(default=False, verbose_name='notification sent')),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule_changes', to='events.event')),
            ],
            options={
                'verbose_name': 'event schedule change',
                'verbose_name_plural': 'event schedule changes',
                'ordering': ['-created_at'],
            },
        ),
    ]
