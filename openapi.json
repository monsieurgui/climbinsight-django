{"openapi": "3.1.0", "info": {"title": "ClimbInsight API", "version": "v1", "description": "API for climbing competition management"}, "paths": {"/api/token/pair": {"post": {"operationId": "token_obtain_pair", "summary": "Obtain Token", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenObtainPairOutputSchema"}}}}}, "tags": ["token"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenObtainPairInputSchema"}}}, "required": true}}}, "/api/token/refresh": {"post": {"operationId": "token_refresh", "summary": "Refresh Token", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenRefreshOutputSchema"}}}}}, "tags": ["token"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenRefreshInputSchema"}}}, "required": true}}}, "/api/token/verify": {"post": {"operationId": "token_verify", "summary": "Verify Token", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Schema"}}}}}, "tags": ["token"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenVerifyInputSchema"}}}, "required": true}}}, "/api/leagues/": {"get": {"operationId": "leagues_api_list_leagues", "summary": "List Leagues", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/LeagueOut"}, "title": "Response", "type": "array"}}}}}, "description": "Get a list of all leagues.\n\nParameters:\n    query: Optional query parameters for filtering\n    - status: Filter by league status\n    - is_active: Filter by active status\n\nReturns:\n    List of leagues matching the query parameters", "tags": ["Leagues"], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/LeagueQuerySchema"}]}}}, "required": false}, "security": [{"JWTAuth": []}]}, "post": {"operationId": "leagues_api_create_league", "summary": "Create League", "parameters": [], "responses": {"201": {"description": "Created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LeagueOut"}}}}}, "description": "Create a new league.\n\nParameters:\n    payload: League creation data\n    - name: League name\n    - start_date: Start date\n    - end_date: End date\n    - description: Optional description\n    - categories: List of category IDs\n    \nReturns:\n    Created league data", "tags": ["Leagues"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/LeagueIn"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/leagues/{league_id}": {"get": {"operationId": "leagues_api_get_league", "summary": "Get League", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LeagueOut"}}}}}, "description": "Get details of a specific league.\n\nParameters:\n    league_id: ID of the league to retrieve\n    \nReturns:\n    League details\n    \nRaises:\n    404: League not found", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}, "put": {"operationId": "leagues_api_update_league", "summary": "Update League", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LeagueOut"}}}}}, "description": "Update a league's details.\n\nParameters:\n    league_id: ID of the league to update\n    payload: League update data\n    - name: Optional new name\n    - start_date: Optional new start date\n    - end_date: Optional new end date\n    - description: Optional new description\n    - categories: Optional new list of category IDs\n    \nReturns:\n    Updated league data\n    \nRaises:\n    404: League not found", "tags": ["Leagues"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/LeagueUpdateSchema"}}}, "required": true}, "security": [{"JWTAuth": []}]}, "delete": {"operationId": "leagues_api_delete_league", "summary": "Delete League", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}], "responses": {"204": {"description": "No Content"}}, "description": "Delete a league.\n\nParameters:\n    league_id: ID of the league to delete\n    \nReturns:\n    204: No content\n    \nRaises:\n    404: League not found", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/{league_id}/summary": {"get": {"operationId": "leagues_api_get_league_summary", "summary": "Get League Summary", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LeagueSummary"}}}}}, "description": "Get a summary of league statistics.\n\nParameters:\n    league_id: ID of the league\n    \nReturns:\n    League summary including:\n    - Total competitions\n    - Active competitions\n    - Total participants\n    - Category distribution\n    \nRaises:\n    404: League not found", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/bulk-delete": {"post": {"operationId": "leagues_api_bulk_delete_leagues", "summary": "Bulk Delete Leagues", "parameters": [], "responses": {"204": {"description": "No Content"}}, "description": "Delete multiple leagues at once.\n\nParameters:\n    payload: List of league IDs to delete\n    \nReturns:\n    204: No content", "tags": ["Leagues"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BulkLeagueIds"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/leagues/{league_id}/competitions": {"get": {"operationId": "leagues_api_get_league_competitions", "summary": "Get League Competitions", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/CompetitionOut"}, "title": "Response", "type": "array"}}}}}, "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/bulk-activate": {"post": {"operationId": "leagues_api_bulk_activate_leagues", "summary": "Bulk Activate Leagues", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "object"}}}}}, "tags": ["Leagues"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BulkLeagueIds"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/leagues/bulk-deactivate": {"post": {"operationId": "leagues_api_bulk_deactivate_leagues", "summary": "Bulk Deactivate Leagues", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "object"}}}}}, "tags": ["Leagues"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BulkLeagueIds"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/leagues/{league_id}/athletes": {"get": {"operationId": "leagues_api_get_league_athletes", "summary": "Get League Athletes", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/UserResponseSchema"}, "title": "Response", "type": "array"}}}}}, "description": "Get all athletes registered in a league", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/{league_id}/athletes/{user_id}": {"post": {"operationId": "leagues_api_add_athlete_to_league", "summary": "Add Athlete To League", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}, {"in": "path", "name": "user_id", "schema": {"title": "User Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Add an athlete to a league", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}, "delete": {"operationId": "leagues_api_remove_athlete_from_league", "summary": "Remove Athlete From League", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}, {"in": "path", "name": "user_id", "schema": {"title": "User Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Remove an athlete from a league", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/{league_id}/officials": {"get": {"operationId": "leagues_api_get_league_officials", "summary": "Get League Officials", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/UserResponseSchema"}, "title": "Response", "type": "array"}}}}}, "description": "Get all officials assigned to a league", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/{league_id}/officials/{user_id}": {"post": {"operationId": "leagues_api_add_official_to_league", "summary": "Add Official To League", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}, {"in": "path", "name": "user_id", "schema": {"title": "User Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Add an official to a league", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/{league_id}/rankings": {"get": {"operationId": "leagues_api_get_league_rankings", "summary": "Get League Rankings", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}, {"in": "query", "name": "category", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Category"}, "required": false}, {"in": "query", "name": "page", "schema": {"default": 1, "title": "Page", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 20, "title": "Page Size", "type": "integer"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "object"}}}}}, "description": "Get league rankings, optionally filtered by category with pagination", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}, "post": {"operationId": "leagues_api_update_league_rankings", "summary": "Update League Rankings", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}, {"in": "query", "name": "rankings", "schema": {"title": "Rankings", "type": "object"}, "required": true}, {"in": "query", "name": "category", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Category"}, "required": false}], "responses": {"200": {"description": "OK"}}, "description": "Update league rankings", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/{league_id}/rankings/timeseries": {"get": {"operationId": "leagues_api_get_rankings_timeseries", "summary": "Get Rankings Timeseries", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}, {"in": "query", "name": "start_date", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Start Date"}, "required": false}, {"in": "query", "name": "end_date", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "End Date"}, "required": false}, {"in": "query", "name": "top_n", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 10, "title": "Top N"}, "required": false}, {"in": "query", "name": "page", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 1, "title": "Page"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 20, "title": "Page Size"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/RankingTimeSeriesSchema"}, "title": "Response", "type": "array"}}}}}, "description": "Get time series data of rankings for visualization.", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/{league_id}/rankings/distribution": {"get": {"operationId": "leagues_api_get_points_distribution", "summary": "Get Points Distribution", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}, {"in": "query", "name": "start_date", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Start Date"}, "required": false}, {"in": "query", "name": "end_date", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "End Date"}, "required": false}, {"in": "query", "name": "top_n", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 10, "title": "Top N"}, "required": false}, {"in": "query", "name": "page", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 1, "title": "Page"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 20, "title": "Page Size"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PointsDistributionSchema"}}}}}, "description": "Get distribution of points for visualization.", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/{league_id}/rankings/level-stats": {"get": {"operationId": "leagues_api_get_competition_level_stats", "summary": "Get Competition Level Stats", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}, {"in": "query", "name": "start_date", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Start Date"}, "required": false}, {"in": "query", "name": "end_date", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "End Date"}, "required": false}, {"in": "query", "name": "top_n", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 10, "title": "Top N"}, "required": false}, {"in": "query", "name": "page", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 1, "title": "Page"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 20, "title": "Page Size"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/CompetitionLevelStatsSchema"}, "title": "Response", "type": "array"}}}}}, "description": "Get statistics by competition level for visualization.", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/{league_id}/rankings/summary": {"get": {"operationId": "leagues_api_get_rankings_summary", "summary": "Get Rankings Summary", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}, {"in": "query", "name": "start_date", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Start Date"}, "required": false}, {"in": "query", "name": "end_date", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "End Date"}, "required": false}, {"in": "query", "name": "top_n", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 10, "title": "Top N"}, "required": false}, {"in": "query", "name": "page", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 1, "title": "Page"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 20, "title": "Page Size"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "object"}}}}}, "description": "Get summary statistics of rankings.", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/{league_id}/rankings/advanced-stats": {"get": {"operationId": "leagues_api_get_advanced_stats", "summary": "Get Advanced Stats", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}, {"in": "query", "name": "start_date", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Start Date"}, "required": false}, {"in": "query", "name": "end_date", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "End Date"}, "required": false}, {"in": "query", "name": "top_n", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 10, "title": "Top N"}, "required": false}, {"in": "query", "name": "page", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 1, "title": "Page"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 20, "title": "Page Size"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/AdvancedStatsSchema"}, "title": "Response", "type": "array"}}}}}, "description": "Get advanced statistics for athletes.", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/{league_id}/export/rankings": {"get": {"operationId": "leagues_api_export_rankings", "summary": "Export Rankings", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}, {"in": "query", "name": "format", "schema": {"default": "csv", "title": "Format", "type": "string"}, "required": false}, {"in": "query", "name": "include_statistics", "schema": {"default": true, "title": "Include Statistics", "type": "boolean"}, "required": false}, {"in": "query", "name": "include_historical", "schema": {"default": false, "title": "Include Historical", "type": "boolean"}, "required": false}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}], "responses": {"200": {"description": "OK"}}, "description": "Export rankings data in CSV or JSON format.", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/{league_id}/export/statistics": {"get": {"operationId": "leagues_api_export_statistics", "summary": "Export Statistics", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}, {"in": "query", "name": "format", "schema": {"default": "csv", "title": "Format", "type": "string"}, "required": false}, {"in": "query", "name": "include_statistics", "schema": {"default": true, "title": "Include Statistics", "type": "boolean"}, "required": false}, {"in": "query", "name": "include_historical", "schema": {"default": false, "title": "Include Historical", "type": "boolean"}, "required": false}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}], "responses": {"200": {"description": "OK"}}, "description": "Export detailed statistics in CSV or JSON format.", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/ping": {"get": {"operationId": "leagues_api_ping", "summary": "Ping", "parameters": [], "responses": {"200": {"description": "OK"}}, "description": "Test endpoint to verify router is mounted", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/search": {"get": {"operationId": "leagues_api_search_leagues", "summary": "Search Leagues", "parameters": [{"in": "query", "name": "query", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Query"}, "required": false}, {"in": "query", "name": "status", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}, "required": false}, {"in": "query", "name": "start_date", "schema": {"anyOf": [{"format": "date", "type": "string"}, {"type": "null"}], "title": "Start Date"}, "required": false}, {"in": "query", "name": "end_date", "schema": {"anyOf": [{"format": "date", "type": "string"}, {"type": "null"}], "title": "End Date"}, "required": false}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}, {"in": "query", "name": "min_participants", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Min Participants"}, "required": false}, {"in": "query", "name": "has_active_competitions", "schema": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Has Active Competitions"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/LeagueOut"}, "title": "Response", "type": "array"}}}}}, "description": "Advanced search for leagues with multiple filter criteria.", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/{league_id}/overview": {"get": {"operationId": "leagues_api_get_league_overview", "summary": "Get League Overview", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}, {"in": "query", "name": "include_competitions", "schema": {"default": true, "title": "Include Competitions", "type": "boolean"}, "required": false}, {"in": "query", "name": "include_rankings", "schema": {"default": true, "title": "Include Rankings", "type": "boolean"}, "required": false}, {"in": "query", "name": "include_statistics", "schema": {"default": true, "title": "Include Statistics", "type": "boolean"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "object"}}}}}, "description": "Get a comprehensive overview of a league including competitions, rankings, and statistics.", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/{league_id}/statistics": {"get": {"operationId": "leagues_api_get_league_statistics", "summary": "Get League Statistics", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}, {"in": "query", "name": "time_period", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Time Period"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LeagueStatisticsSchema"}}}}}, "description": "Get detailed statistics for a league.", "tags": ["Leagues"], "security": [{"JWTAuth": []}]}}, "/api/leagues/bulk-status-update": {"post": {"operationId": "leagues_api_bulk_update_league_status", "summary": "Bulk Update League Status", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "object"}}}}}, "description": "Update the status of multiple leagues at once.", "tags": ["Leagues"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BulkLeagueStatusUpdate"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/competitions/": {"get": {"operationId": "competitions_api_list_competitions", "summary": "List Competitions", "parameters": [{"in": "query", "name": "league_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "League Id"}, "required": false}, {"in": "query", "name": "status", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}, "required": false}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/CompetitionOut"}, "title": "Response", "type": "array"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "description": "List all competitions with optional filtering.", "tags": ["Competitions"], "security": [{"JWTAuth": []}]}, "post": {"operationId": "competitions_api_create_competition", "summary": "Create Competition", "parameters": [], "responses": {"201": {"description": "Created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CompetitionOut"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "description": "Create a new competition.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CompetitionIn"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/competitions/{competition_id}": {"get": {"operationId": "competitions_api_get_competition", "summary": "Get Competition", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CompetitionOverviewOut"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "description": "Get detailed information about a specific competition.", "tags": ["Competitions"], "security": [{"JWTAuth": []}]}, "put": {"operationId": "competitions_api_update_competition", "summary": "Update Competition", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CompetitionOut"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "description": "Update competition details.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CompetitionIn"}}}, "required": true}, "security": [{"JWTAuth": []}]}, "delete": {"operationId": "competitions_api_delete_competition", "summary": "Delete Competition", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccessResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "description": "Delete a competition.", "tags": ["Competitions"], "security": [{"JWTAuth": []}]}}, "/api/competitions/{competition_id}/registrations": {"post": {"operationId": "competitions_api_register_athlete", "summary": "Register Athlete", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"201": {"description": "Created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrationOut"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "description": "Register an athlete for a competition.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrationIn"}}}, "required": true}, "security": [{"JWTAuth": []}]}, "get": {"operationId": "competitions_api_list_registrations", "summary": "List Registrations", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/RegistrationOut"}, "title": "Response", "type": "array"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "description": "List all registrations for a competition.", "tags": ["Competitions"], "security": [{"JWTAuth": []}]}}, "/api/competitions/{competition_id}/results": {"post": {"operationId": "competitions_api_submit_result", "summary": "Submit Result", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"201": {"description": "Created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResultOut"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "description": "Submit a result for an athlete.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResultIn"}}}, "required": true}, "security": [{"JWTAuth": []}]}, "get": {"operationId": "competitions_api_list_results", "summary": "List Results", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "round_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Round Id"}, "required": false}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ResultOut"}, "title": "Response", "type": "array"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "description": "List results for a competition with optional filtering.", "tags": ["Competitions"], "security": [{"JWTAuth": []}]}}, "/api/competitions/{competition_id}/athlete/{athlete_id}/results": {"get": {"operationId": "competitions_api_get_athlete_results", "summary": "Get Athlete Results", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "path", "name": "athlete_id", "schema": {"title": "Athlete Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ResultOut"}, "title": "Response", "type": "array"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "description": "Get all results for a specific athlete in a competition.", "tags": ["Competitions"], "security": [{"JWTAuth": []}]}}, "/api/competitions/{competition_id}/appeals": {"post": {"operationId": "competitions_api_submit_appeal", "summary": "Submit Appeal", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"201": {"description": "Created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppealOut"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "description": "Submit an appeal for a competition result.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppealIn"}}}, "required": true}, "security": [{"JWTAuth": []}]}, "get": {"operationId": "competitions_api_list_appeals", "summary": "List Appeals", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "status", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/AppealOut"}, "title": "Response", "type": "array"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "description": "List all appeals for a competition.", "tags": ["Competitions"], "security": [{"JWTAuth": []}]}}, "/api/competitions/ping": {"get": {"operationId": "competitions_api_ping", "summary": "Ping", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccessResponse"}}}}}, "description": "Test endpoint to verify router is mounted", "tags": ["Competitions"], "security": [{"JWTAuth": []}]}}, "/api/competitions/{competition_id}/rounds": {"post": {"operationId": "competitions_api_create_round", "summary": "Create Round", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"201": {"description": "Created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoundOut"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "description": "Create a new round for a competition.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoundIn"}}}, "required": true}, "security": [{"JWTAuth": []}]}, "get": {"operationId": "competitions_api_list_rounds", "summary": "List Rounds", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/RoundOut"}, "title": "Response", "type": "array"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "description": "List all rounds for a competition.", "tags": ["Competitions"], "security": [{"JWTAuth": []}]}}, "/api/competitions/{competition_id}/rounds/{round_id}": {"get": {"operationId": "competitions_api_get_round", "summary": "Get Round", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "path", "name": "round_id", "schema": {"title": "Round Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoundOut"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "description": "Get details of a specific round.", "tags": ["Competitions"], "security": [{"JWTAuth": []}]}}, "/api/competitions/search": {"get": {"operationId": "competitions_api_search_competitions", "summary": "Search Competitions", "parameters": [{"in": "query", "name": "query", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Query"}, "required": false}, {"in": "query", "name": "league_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "League Id"}, "required": false}, {"in": "query", "name": "status", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}, "required": false}, {"in": "query", "name": "start_date", "schema": {"anyOf": [{"format": "date", "type": "string"}, {"type": "null"}], "title": "Start Date"}, "required": false}, {"in": "query", "name": "end_date", "schema": {"anyOf": [{"format": "date", "type": "string"}, {"type": "null"}], "title": "End Date"}, "required": false}, {"in": "query", "name": "location_city", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Location City"}, "required": false}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}, {"in": "query", "name": "has_available_registration", "schema": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Has Available Registration"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/CompetitionOut"}, "title": "Response", "type": "array"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "description": "Advanced search for competitions with multiple filter criteria.", "tags": ["Competitions"], "security": [{"JWTAuth": []}]}}, "/api/competitions/{competition_id}/overview": {"get": {"operationId": "competitions_api_get_competition_overview", "summary": "Get Competition Overview", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "include_events", "schema": {"default": true, "title": "Include Events", "type": "boolean"}, "required": false}, {"in": "query", "name": "include_registrations", "schema": {"default": true, "title": "Include Registrations", "type": "boolean"}, "required": false}, {"in": "query", "name": "include_results", "schema": {"default": true, "title": "Include Results", "type": "boolean"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CompetitionOverviewSchema"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "description": "Get a comprehensive overview of a competition including events, registrations, and results.", "tags": ["Competitions"], "security": [{"JWTAuth": []}]}}, "/api/competitions/{competition_id}/analytics": {"get": {"operationId": "competitions_api_get_competition_analytics", "summary": "Get Competition Analytics", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CompetitionAnalyticsSchema"}}}}}, "description": "Get detailed analytics for a competition.", "tags": ["Competitions"], "security": [{"JWTAuth": []}]}}, "/api/competitions/bulk-schedule-update": {"post": {"operationId": "competitions_api_bulk_update_competition_schedule", "summary": "Bulk Update Competition Schedule", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "object"}}}}}, "description": "Update the schedule of multiple competitions at once.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BulkCompetitionScheduleUpdate"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/competitions/scoring/{competition_id}/ruleset": {"get": {"operationId": "competitions_scoring_api_get_ruleset_info", "summary": "Get Ruleset Info", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Get information about the competition's scoring ruleset.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/scoring/{competition_id}/attempts": {"post": {"operationId": "competitions_scoring_api_submit_attempt", "summary": "Submit Attempt", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "athlete_id", "schema": {"title": "Athlete Id", "type": "integer"}, "required": true}, {"in": "query", "name": "category_id", "schema": {"title": "Category Id", "type": "integer"}, "required": true}, {"in": "query", "name": "discipline", "schema": {"title": "Discipline", "type": "string"}, "required": true}, {"in": "query", "name": "attempt", "schema": {"title": "Attempt", "type": "object"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Submit a new attempt for scoring.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/scoring/{competition_id}/results": {"get": {"operationId": "competitions_scoring_api_get_results", "summary": "Get Results", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}, {"in": "query", "name": "status", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}, "required": false}], "responses": {"200": {"description": "OK"}}, "description": "Get competition results.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/scoring/{competition_id}/results/{result_id}/verify": {"post": {"operationId": "competitions_scoring_api_verify_result", "summary": "Verify Result", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "path", "name": "result_id", "schema": {"title": "Result Id", "type": "integer"}, "required": true}, {"in": "query", "name": "verification_notes", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Verification Notes"}, "required": false}], "responses": {"200": {"description": "OK"}}, "description": "Verify a competition result.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/scoring/{competition_id}/results/publish": {"post": {"operationId": "competitions_scoring_api_publish_results", "summary": "Publish Results", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}], "responses": {"200": {"description": "OK"}}, "description": "Publish results for a category or all categories.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/scoring/{competition_id}/results/{result_id}/appeal": {"post": {"operationId": "competitions_scoring_api_submit_appeal", "summary": "Submit Appeal", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "path", "name": "result_id", "schema": {"title": "Result Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Submit an appeal for a result.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppealSchema"}}}, "required": true}, "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/scoring/{competition_id}/results/{result_id}/resolve-appeal": {"post": {"operationId": "competitions_scoring_api_resolve_appeal", "summary": "Resolve Appeal", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "path", "name": "result_id", "schema": {"title": "Result Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Resolve an appeal.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppealResolutionSchema"}}}, "required": true}, "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/scoring/{competition_id}/results/status": {"get": {"operationId": "competitions_scoring_api_get_result_status", "summary": "Get Result Status", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}], "responses": {"200": {"description": "OK"}}, "description": "Get status summary of results.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/scoring/{competition_id}/results/{result_id}/history": {"get": {"operationId": "competitions_scoring_api_get_result_history", "summary": "Get Result History", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "path", "name": "result_id", "schema": {"title": "Result Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Get history of a result including verifications and appeals.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/venue/{competition_id}/areas": {"get": {"operationId": "competitions_venue_api_list_areas", "summary": "List Areas", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "List all areas in the venue.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}, "post": {"operationId": "competitions_venue_api_create_area", "summary": "Create Area", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Create a new area in the venue.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AreaSchema"}}}, "required": true}, "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/venue/{competition_id}/areas/{area_name}": {"put": {"operationId": "competitions_venue_api_update_area", "summary": "Update Area", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "path", "name": "area_name", "schema": {"title": "Area Name", "type": "string"}, "required": true}, {"in": "query", "name": "updates", "schema": {"title": "Updates", "type": "object"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Update an existing area.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/venue/{competition_id}/routes": {"get": {"operationId": "competitions_venue_api_list_routes", "summary": "List Routes", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "List all routes in the venue.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}, "post": {"operationId": "competitions_venue_api_create_route", "summary": "Create Route", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Create a new route in the venue.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RouteSchema"}}}, "required": true}, "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/venue/{competition_id}/routes/{route_id}": {"put": {"operationId": "competitions_venue_api_update_route", "summary": "Update Route", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "path", "name": "route_id", "schema": {"title": "Route Id", "type": "string"}, "required": true}, {"in": "query", "name": "updates", "schema": {"title": "Updates", "type": "object"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Update an existing route.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/venue/{competition_id}/schedule": {"post": {"operationId": "competitions_venue_api_schedule_area", "summary": "Schedule Area", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Schedule an area for a specific time period.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ScheduleRequestSchema"}}}, "required": true}, "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/venue/{competition_id}/schedule/{area_name}": {"get": {"operationId": "competitions_venue_api_get_area_schedule", "summary": "Get Area Schedule", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "path", "name": "area_name", "schema": {"title": "Area Name", "type": "string"}, "required": true}, {"in": "query", "name": "date", "schema": {"format": "date-time", "title": "Date", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Get the schedule for a specific area on a given date.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/venue/{competition_id}/availability": {"post": {"operationId": "competitions_venue_api_get_available_times", "summary": "Get Available Times", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Find available time slots for an area.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AvailabilityRequestSchema"}}}, "required": true}, "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/venue/{competition_id}/safety/{area_name}": {"get": {"operationId": "competitions_venue_api_check_area_safety", "summary": "Check Area Safety", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "path", "name": "area_name", "schema": {"title": "Area Name", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Check safety requirements for an area.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/venue/{competition_id}/routes/{route_id}/status": {"get": {"operationId": "competitions_venue_api_get_route_status", "summary": "Get Route Status", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "path", "name": "route_id", "schema": {"title": "Route Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Get the current status of a route.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/schedule/{competition_id}/schedule": {"post": {"operationId": "competitions_schedule_api_create_competition_schedule", "summary": "Create Competition Schedule", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Create a schedule for multiple events in the competition.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/EventScheduleSchema"}, "title": "Events", "type": "array"}}}, "required": true}, "security": [{"CompetitionRoleAuth": []}]}, "get": {"operationId": "competitions_schedule_api_get_competition_schedule", "summary": "Get Competition Schedule", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "date", "schema": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Date"}, "required": false}], "responses": {"200": {"description": "OK"}}, "description": "Get the competition schedule, optionally filtered by date.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/schedule/{competition_id}/schedule/suggest": {"post": {"operationId": "competitions_schedule_api_suggest_schedule", "summary": "Suggest Schedule", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Get schedule suggestions for a set of events.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ScheduleSuggestionSchema"}, "title": "Events", "type": "array"}}}, "required": true}, "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/schedule/{competition_id}/schedule/athlete/{athlete_id}": {"get": {"operationId": "competitions_schedule_api_get_athlete_schedule", "summary": "Get Athlete Schedule", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "path", "name": "athlete_id", "schema": {"title": "Athlete Id", "type": "integer"}, "required": true}, {"in": "query", "name": "date", "schema": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Date"}, "required": false}], "responses": {"200": {"description": "OK"}}, "description": "Get an athlete's schedule for the competition.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/schedule/{competition_id}/schedule/conflicts": {"get": {"operationId": "competitions_schedule_api_check_schedule_conflicts", "summary": "Check Schedule Conflicts", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Check for scheduling conflicts within a date range.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DateRangeSchema"}}}, "required": true}, "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/schedule/{competition_id}/schedule/availability": {"get": {"operationId": "competitions_schedule_api_get_area_availability", "summary": "Get Area Availability", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "area_name", "schema": {"title": "Area Name", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Get availability windows for an area within a date range.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DateRangeSchema"}}}, "required": true}, "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/staff/{competition_id}/staff/assign": {"post": {"operationId": "competitions_staff_api_assign_staff", "summary": "Assign Staff", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Assign a staff member to a role.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/StaffAssignmentSchema"}}}, "required": true}, "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/staff/{competition_id}/staff/assignment": {"delete": {"operationId": "competitions_staff_api_remove_staff_assignment", "summary": "Remove Staff Assignment", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "user_id", "schema": {"title": "User Id", "type": "integer"}, "required": true}, {"in": "query", "name": "role", "schema": {"title": "Role", "type": "string"}, "required": true}, {"in": "query", "name": "area", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Area"}, "required": false}], "responses": {"200": {"description": "OK"}}, "description": "Remove a staff assignment.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/staff/{competition_id}/staff/assignments": {"get": {"operationId": "competitions_staff_api_list_staff_assignments", "summary": "List Staff Assignments", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "role", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Role"}, "required": false}, {"in": "query", "name": "area", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Area"}, "required": false}], "responses": {"200": {"description": "OK"}}, "description": "List all staff assignments, optionally filtered by role or area.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/staff/{competition_id}/staff/validate": {"post": {"operationId": "competitions_staff_api_validate_staffing", "summary": "Validate Staffing", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Validate that all staffing requirements are met.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/StaffRequirementSchema"}, "title": "Requirements", "type": "array"}}}, "required": true}, "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/staff/{competition_id}/staff/schedule/{user_id}": {"get": {"operationId": "competitions_staff_api_get_staff_schedule", "summary": "Get Staff Schedule", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "path", "name": "user_id", "schema": {"title": "User Id", "type": "integer"}, "required": true}, {"in": "query", "name": "date", "schema": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Date"}, "required": false}], "responses": {"200": {"description": "OK"}}, "description": "Get schedule for a specific staff member.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/staff/{competition_id}/staff/coverage/{area}": {"get": {"operationId": "competitions_staff_api_get_area_coverage", "summary": "Get Area Coverage", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "path", "name": "area", "schema": {"title": "Area", "type": "string"}, "required": true}, {"in": "query", "name": "date", "schema": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Date"}, "required": false}], "responses": {"200": {"description": "OK"}}, "description": "Get staff coverage for a specific area.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/staff/{competition_id}/staff/roles": {"get": {"operationId": "competitions_staff_api_list_staff_roles", "summary": "List Staff Roles", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "List all available staff roles and their descriptions.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/staff/{competition_id}/staff/requirements/{event_type}": {"get": {"operationId": "competitions_staff_api_get_event_staff_requirements", "summary": "Get Event Staff Requirements", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "path", "name": "event_type", "schema": {"title": "Event Type", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Get staff requirements for a specific event type.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/staff/{competition_id}/staff/summary": {"get": {"operationId": "competitions_staff_api_get_staff_summary", "summary": "Get Staff Summary", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Get a summary of staff assignments and coverage.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/safety/{competition_id}/safety/check": {"post": {"operationId": "competitions_safety_api_perform_safety_check", "summary": "Perform Safety Check", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Perform a safety check and record results.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SafetyCheckRequest"}}}, "required": true}, "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/safety/{competition_id}/safety/incident": {"post": {"operationId": "competitions_safety_api_report_safety_incident", "summary": "Report Safety Incident", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Report a safety incident.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SafetyIncidentReport"}}}, "required": true}, "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/safety/{competition_id}/safety/status": {"get": {"operationId": "competitions_safety_api_get_safety_status", "summary": "Get Safety Status", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "location", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Location"}, "required": false}], "responses": {"200": {"description": "OK"}}, "description": "Get current safety status for a location or the entire competition.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/safety/{competition_id}/safety/requirements": {"get": {"operationId": "competitions_safety_api_get_safety_requirements", "summary": "Get Safety Requirements", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "event_type", "schema": {"title": "Event Type", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Get safety requirements for a specific event type.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/safety/{competition_id}/safety/validate": {"post": {"operationId": "competitions_safety_api_validate_safety_setup", "summary": "Validate Safety Setup", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Validate that all safety requirements are met for an event.", "tags": ["Competitions"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SafetyRequirementQuery"}}}, "required": true}, "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/safety/{competition_id}/safety/checklist/{check_type}": {"get": {"operationId": "competitions_safety_api_get_safety_checklist", "summary": "Get Safety Checklist", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "path", "name": "check_type", "schema": {"title": "Check Type", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Get the checklist for a specific safety check type.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/safety/{competition_id}/safety/incidents": {"get": {"operationId": "competitions_safety_api_list_safety_incidents", "summary": "List Safety Incidents", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "status", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}, "required": false}, {"in": "query", "name": "severity", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Severity"}, "required": false}], "responses": {"200": {"description": "OK"}}, "description": "List safety incidents with optional filtering.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/safety/{competition_id}/safety/incidents/{incident_id}/status": {"put": {"operationId": "competitions_safety_api_update_incident_status", "summary": "Update Incident Status", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "path", "name": "incident_id", "schema": {"title": "Incident Id", "type": "string"}, "required": true}, {"in": "query", "name": "status", "schema": {"title": "Status", "type": "string"}, "required": true}, {"in": "query", "name": "resolution_notes", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Resolution Notes"}, "required": false}], "responses": {"200": {"description": "OK"}}, "description": "Update the status of a safety incident.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/competitions/safety/{competition_id}/safety/summary": {"get": {"operationId": "competitions_safety_api_get_safety_summary", "summary": "Get Safety Summary", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Get a summary of all safety-related information.", "tags": ["Competitions"], "security": [{"CompetitionRoleAuth": []}]}}, "/api/events/competition/{competition_id}/events": {"get": {"operationId": "events_api_list_events", "summary": "List Events", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "event_type", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Event Type"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/EventOut"}, "title": "Response", "type": "array"}}}}}, "description": "List all events for a competition.", "tags": ["Events"], "security": [{"JWTAuth": []}]}, "post": {"operationId": "events_api_create_event", "summary": "Create Event", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EventOut"}}}}}, "description": "Create a new event.", "tags": ["Events"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/EventCreate"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/events/events/{event_id}": {"get": {"operationId": "events_api_get_event", "summary": "Get Event", "parameters": [{"in": "path", "name": "event_id", "schema": {"title": "Event Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EventOut"}}}}}, "description": "Get detailed information about a specific event.", "tags": ["Events"], "security": [{"JWTAuth": []}]}, "put": {"operationId": "events_api_update_event", "summary": "Update Event", "parameters": [{"in": "path", "name": "event_id", "schema": {"title": "Event Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EventOut"}}}}}, "description": "Update event details.", "tags": ["Events"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/EventUpdate"}}}, "required": true}, "security": [{"JWTAuth": []}]}, "delete": {"operationId": "events_api_delete_event", "summary": "Delete Event", "parameters": [{"in": "path", "name": "event_id", "schema": {"title": "Event Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Delete an event.", "tags": ["Events"], "security": [{"JWTAuth": []}]}}, "/api/events/events/{event_id}/participants": {"post": {"operationId": "events_api_add_participant", "summary": "Add Participant", "parameters": [{"in": "path", "name": "event_id", "schema": {"title": "Event Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "object"}}}}}, "description": "Add a participant to an event.", "tags": ["Events"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ParticipationSchema"}}}, "required": true}, "security": [{"JWTAuth": []}]}, "get": {"operationId": "events_api_list_participants", "summary": "List Participants", "parameters": [{"in": "path", "name": "event_id", "schema": {"title": "Event Id", "type": "integer"}, "required": true}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"type": "object"}, "title": "Response", "type": "array"}}}}}, "description": "List all participants in an event.", "tags": ["Events"], "security": [{"JWTAuth": []}]}}, "/api/events/events/{event_id}/starting-order": {"post": {"operationId": "events_api_set_starting_order", "summary": "Set Starting Order", "parameters": [{"in": "path", "name": "event_id", "schema": {"title": "Event Id", "type": "integer"}, "required": true}, {"in": "query", "name": "category_id", "schema": {"title": "Category Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "object"}}}}}, "description": "Set the starting order for athletes in a category.", "tags": ["Events"], "requestBody": {"content": {"application/json": {"schema": {"items": {"type": "integer"}, "title": "Order", "type": "array"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/events/events/{event_id}/incidents": {"post": {"operationId": "events_api_report_incident", "summary": "Report Incident", "parameters": [{"in": "path", "name": "event_id", "schema": {"title": "Event Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "object"}}}}}, "description": "Report an incident during an event.", "tags": ["Events"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/IncidentSchema"}}}, "required": true}, "security": [{"JWTAuth": []}]}, "get": {"operationId": "events_api_list_incidents", "summary": "List Incidents", "parameters": [{"in": "path", "name": "event_id", "schema": {"title": "Event Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"type": "object"}, "title": "Response", "type": "array"}}}}}, "description": "List all incidents for an event.", "tags": ["Events"], "security": [{"JWTAuth": []}]}}, "/api/events/events/{event_id}/schedule-change": {"post": {"operationId": "events_api_change_schedule", "summary": "Change Schedule", "parameters": [{"in": "path", "name": "event_id", "schema": {"title": "Event Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "object"}}}}}, "description": "Change the schedule of an event.", "tags": ["Events"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ScheduleChangeSchema"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/events/events/{event_id}/schedule-changes": {"get": {"operationId": "events_api_list_schedule_changes", "summary": "List Schedule Changes", "parameters": [{"in": "path", "name": "event_id", "schema": {"title": "Event Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"type": "object"}, "title": "Response", "type": "array"}}}}}, "description": "List all schedule changes for an event.", "tags": ["Events"], "security": [{"JWTAuth": []}]}}, "/api/events/search": {"get": {"operationId": "events_api_search_events", "summary": "Search Events", "parameters": [{"in": "query", "name": "query", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Query"}, "required": false}, {"in": "query", "name": "competition_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Competition Id"}, "required": false}, {"in": "query", "name": "event_type", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Event Type"}, "required": false}, {"in": "query", "name": "start_date", "schema": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Start Date"}, "required": false}, {"in": "query", "name": "end_date", "schema": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "End Date"}, "required": false}, {"in": "query", "name": "category_id", "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "required": false}, {"in": "query", "name": "status", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/EventOut"}, "title": "Response", "type": "array"}}}}}, "description": "Advanced search for events with multiple filter criteria.", "tags": ["Events"], "security": [{"JWTAuth": []}]}}, "/api/events/{event_id}/analytics": {"get": {"operationId": "events_api_get_event_analytics", "summary": "Get Event Analytics", "parameters": [{"in": "path", "name": "event_id", "schema": {"title": "Event Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EventAnalyticsSchema"}}}}}, "description": "Get detailed analytics for an event.", "tags": ["Events"], "security": [{"JWTAuth": []}]}}, "/api/events/competition/{competition_id}/schedule": {"get": {"operationId": "events_api_get_competition_schedule", "summary": "Get Competition Schedule", "parameters": [{"in": "path", "name": "competition_id", "schema": {"title": "Competition Id", "type": "integer"}, "required": true}, {"in": "query", "name": "include_participants", "schema": {"default": false, "title": "Include Participants", "type": "boolean"}, "required": false}, {"in": "query", "name": "include_incidents", "schema": {"default": false, "title": "Include Incidents", "type": "boolean"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "object"}}}}}, "description": "Get a detailed schedule of all events in a competition.", "tags": ["Events"], "security": [{"JWTAuth": []}]}}, "/api/gyms/": {"get": {"operationId": "gyms_api_list_gyms", "summary": "List Gyms", "parameters": [{"in": "query", "name": "city", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "City"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/GymOut"}, "title": "Response", "type": "array"}}}}}, "description": "List all gyms with optional city filter.", "tags": ["Gyms"], "security": [{"JWTAuth": []}]}, "post": {"operationId": "gyms_api_create_gym", "summary": "Create Gym", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GymOut"}}}}}, "description": "Create a new gym.", "tags": ["Gyms"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/GymSchema"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/gyms/{gym_id}": {"get": {"operationId": "gyms_api_get_gym", "summary": "Get Gym", "parameters": [{"in": "path", "name": "gym_id", "schema": {"title": "Gym Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GymOut"}}}}}, "description": "Get detailed information about a specific gym.", "tags": ["Gyms"], "security": [{"JWTAuth": []}]}, "put": {"operationId": "gyms_api_update_gym", "summary": "Update Gym", "parameters": [{"in": "path", "name": "gym_id", "schema": {"title": "Gym Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GymOut"}}}}}, "description": "Update gym details.", "tags": ["Gyms"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/GymSchema"}}}, "required": true}, "security": [{"JWTAuth": []}]}, "delete": {"operationId": "gyms_api_delete_gym", "summary": "Delete Gym", "parameters": [{"in": "path", "name": "gym_id", "schema": {"title": "Gym Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Delete a gym.", "tags": ["Gyms"], "security": [{"JWTAuth": []}]}}, "/api/users/registration-status": {"get": {"operationId": "users_api_get_registration_status", "summary": "Get Registration Status", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrationStatusSchema"}}}}}, "tags": ["Users"], "security": [{"JWTAuth": []}]}}, "/api/users/register": {"post": {"operationId": "users_api_register_user", "summary": "Register User", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserResponseSchema"}}}}}, "description": "Register new user with email/password", "tags": ["Users"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSchema"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/users/login": {"post": {"operationId": "users_api_login", "summary": "Login", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenSchema"}}}}}, "tags": ["Users"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthSchema"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/users/token/refresh": {"post": {"operationId": "users_api_refresh_token", "summary": "Refresh Token", "parameters": [{"in": "query", "name": "refresh_token", "schema": {"title": "Refresh Token", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenSchema"}}}}}, "tags": ["Users"], "security": [{"JWTAuth": []}]}}, "/api/users/me": {"get": {"operationId": "users_api_get_current_user", "summary": "Get Current User", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserResponseSchema"}}}}}, "tags": ["Users"], "security": [{"JWTAuth": []}]}}, "/api/users/password/reset": {"post": {"operationId": "users_api_request_password_reset", "summary": "Request Password Reset", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "object"}}}}}, "description": "Send password reset email", "tags": ["Users"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PasswordResetRequestSchema"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/users/password/reset/confirm": {"post": {"operationId": "users_api_confirm_password_reset", "summary": "Confirm Password Reset", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "object"}}}}}, "description": "Confirm password reset with token", "tags": ["Users"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PasswordResetConfirmSchema"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/users/verify-email": {"post": {"operationId": "users_api_verify_email", "summary": "Verify Email", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "object"}}}}}, "description": "Verify user's email address", "tags": ["Users"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/EmailVerificationSchema"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/users/resend-verification": {"post": {"operationId": "users_api_resend_verification_email", "summary": "Resend Verification Email", "parameters": [{"in": "query", "name": "email", "schema": {"title": "Email", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "object"}}}}}, "description": "Resend verification email", "tags": ["Users"], "security": [{"JWTAuth": []}]}}, "/api/users/profile": {"put": {"operationId": "users_api_update_profile", "summary": "Update Profile", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserResponseSchema"}}}}}, "tags": ["Users"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileUpdateSchema"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/users/profile/{user_id}": {"get": {"operationId": "users_api_get_user_profile", "summary": "Get User Profile", "parameters": [{"in": "path", "name": "user_id", "schema": {"title": "User Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserResponseSchema"}}}}}, "tags": ["Users"], "security": [{"JWTAuth": []}]}}, "/api/users/role/{user_id}": {"post": {"operationId": "users_api_assign_role", "summary": "Assign Role", "parameters": [{"in": "path", "name": "user_id", "schema": {"title": "User Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "tags": ["Users"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoleAssignmentSchema"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/users/sessions": {"get": {"operationId": "users_api_list_active_sessions", "summary": "List Active Sessions", "parameters": [], "responses": {"200": {"description": "OK"}}, "tags": ["Users"], "security": [{"JWTAuth": []}]}}, "/api/users/sessions/revoke": {"post": {"operationId": "users_api_revoke_session", "summary": "Revoke Session", "parameters": [{"in": "query", "name": "session_id", "schema": {"title": "Session Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "tags": ["Users"], "security": [{"JWTAuth": []}]}}, "/api/users/me/leagues": {"get": {"operationId": "users_api_get_user_leagues", "summary": "Get User Leagues", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserLeagueResponseSchema"}}}}}, "description": "Get all leagues associated with the current user", "tags": ["Users"], "security": [{"JWTAuth": []}]}}, "/api/users/me/leagues/{league_id}/join": {"post": {"operationId": "users_api_join_league", "summary": "Join League", "parameters": [{"in": "path", "name": "league_id", "schema": {"title": "League Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Join a league as either athlete or official", "tags": ["Users"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserLeagueSchema"}}}, "required": true}, "security": [{"JWTAuth": []}]}}, "/api/users/me/competitions": {"get": {"operationId": "users_api_get_user_competitions", "summary": "Get User Competitions", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/CompetitionOut"}, "title": "Response", "type": "array"}}}}}, "description": "Get all competitions associated with the current user", "tags": ["Users"], "security": [{"JWTAuth": []}]}}, "/api/users/audit-logs": {"get": {"operationId": "users_api_get_audit_logs", "summary": "Get Audit Logs", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/AuditLogSchema"}, "title": "Response", "type": "array"}}}}}, "description": "Get audit logs with optional filtering.\nOnly accessible by superusers and users viewing their own logs.", "tags": ["Users"], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/AuditLogFilterSchema"}]}}}, "required": false}, "security": [{"JWTAuth": []}]}}, "/api/users/audit-logs/actions": {"get": {"operationId": "users_api_get_audit_log_actions", "summary": "Get Audit Log Actions", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"type": "string"}, "title": "Response", "type": "array"}}}}}, "description": "Get list of all possible audit log actions", "tags": ["Users"], "security": [{"JWTAuth": []}]}}, "/api/users/audit-logs/summary": {"get": {"operationId": "users_api_get_audit_logs_summary", "summary": "Get Audit Logs Summary", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "object"}}}}}, "description": "Get summary statistics of audit logs", "tags": ["Users"], "security": [{"JWTAuth": []}]}}}, "components": {"schemas": {"TokenObtainPairOutputSchema": {"properties": {"username": {"description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "maxLength": 150, "title": "Username", "type": "string"}, "refresh": {"title": "Refresh", "type": "string"}, "access": {"title": "Access", "type": "string"}}, "required": ["username", "refresh", "access"], "title": "TokenObtainPairOutputSchema", "type": "object"}, "TokenObtainPairInputSchema": {"properties": {"password": {"maxLength": 128, "title": "Password", "type": "string"}, "username": {"description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "maxLength": 150, "title": "Username", "type": "string"}}, "required": ["password", "username"], "title": "TokenObtainPairInputSchema", "type": "object"}, "TokenRefreshOutputSchema": {"properties": {"refresh": {"title": "Refresh", "type": "string"}, "access": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Access"}}, "required": ["refresh", "access"], "title": "TokenRefreshOutputSchema", "type": "object"}, "TokenRefreshInputSchema": {"properties": {"refresh": {"title": "Refresh", "type": "string"}}, "required": ["refresh"], "title": "TokenRefreshInputSchema", "type": "object"}, "Schema": {"properties": {}, "title": "Schema", "type": "object"}, "TokenVerifyInputSchema": {"properties": {"token": {"title": "Token", "type": "string"}}, "required": ["token"], "title": "TokenVerifyInputSchema", "type": "object"}, "LeagueOut": {"properties": {"id": {"title": "Id", "type": "integer"}, "administrators": {"default": [], "items": {"type": "integer"}, "title": "Administrators", "type": "array"}, "can_edit": {"default": false, "title": "Can Edit", "type": "boolean"}, "can_delete": {"default": false, "title": "Can Delete", "type": "boolean"}, "created_by_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Created By Id"}, "name": {"maxLength": 255, "title": "Name", "type": "string"}, "start_date": {"anyOf": [{"format": "date", "type": "string"}, {"type": "null"}], "title": "Start Date"}, "end_date": {"anyOf": [{"format": "date", "type": "string"}, {"type": "null"}], "title": "End Date"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "categories": {"items": {"type": "integer"}, "title": "Categories", "type": "array"}, "status": {"default": "draft", "maxLength": 20, "title": "Status", "type": "string"}, "is_active": {"default": true, "title": "Active", "type": "boolean"}, "governing_body": {"anyOf": [{"maxLength": 255, "type": "string"}, {"type": "null"}], "title": "Governing Body"}, "sanctioning_body": {"anyOf": [{"maxLength": 255, "type": "string"}, {"type": "null"}], "title": "Sanctioning Body"}}, "required": ["id", "name", "categories"], "title": "LeagueOut", "type": "object"}, "LeagueQuerySchema": {"properties": {"status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}, "is_active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active"}}, "title": "LeagueQuerySchema", "type": "object"}, "LeagueIn": {"properties": {"name": {"title": "Name", "type": "string"}, "start_date": {"format": "date", "title": "Start Date", "type": "string"}, "end_date": {"format": "date", "title": "End Date", "type": "string"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": "", "title": "Description"}, "categories": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "default": [], "title": "Categories"}, "status": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": "draft", "title": "Status"}, "is_active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "default": true, "title": "Is Active"}, "ranking_system": {"anyOf": [{"type": "object"}, {"type": "null"}], "default": {}, "title": "Ranking System"}, "qualification_criteria": {"anyOf": [{"type": "object"}, {"type": "null"}], "default": {}, "title": "Qualification Criteria"}, "governing_body": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Governing Body"}, "sanctioning_body": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Sanctioning Body"}, "seasonal_statistics": {"anyOf": [{"type": "object"}, {"type": "null"}], "default": {}, "title": "Seasonal Statistics"}, "historical_records": {"anyOf": [{"type": "object"}, {"type": "null"}], "default": {}, "title": "Historical Records"}}, "required": ["name", "start_date", "end_date"], "title": "LeagueIn", "type": "object"}, "LeagueUpdateSchema": {"properties": {"name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}, "start_date": {"anyOf": [{"format": "date", "type": "string"}, {"type": "null"}], "title": "Start Date"}, "end_date": {"anyOf": [{"format": "date", "type": "string"}, {"type": "null"}], "title": "End Date"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "categories": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Categories"}, "status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}, "is_active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active"}, "governing_body": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Governing Body"}, "sanctioning_body": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Sanctioning Body"}}, "title": "LeagueUpdateSchema", "type": "object"}, "LeagueSummary": {"properties": {"total_competitions": {"title": "Total Competitions", "type": "integer"}, "active_competitions": {"title": "Active Competitions", "type": "integer"}, "total_participants": {"title": "Total Participants", "type": "integer"}, "categories_distribution": {"additionalProperties": {"type": "integer"}, "title": "Categories Distribution", "type": "object"}}, "required": ["total_competitions", "active_competitions", "total_participants", "categories_distribution"], "title": "LeagueSummary", "type": "object"}, "BulkLeagueIds": {"properties": {"ids": {"items": {"type": "integer"}, "title": "Ids", "type": "array"}}, "required": ["ids"], "title": "BulkLeagueIds", "type": "object"}, "CompetitionOut": {"properties": {"id": {"title": "Id", "type": "integer"}, "name": {"title": "Name", "type": "string"}, "description": {"title": "Description", "type": "string"}, "league_id": {"title": "League Id", "type": "integer"}, "start_date": {"format": "date-time", "title": "Start Date", "type": "string"}, "end_date": {"format": "date-time", "title": "End Date", "type": "string"}, "location": {"$ref": "#/components/schemas/LocationSchema"}, "status": {"title": "Status", "type": "string"}, "registration_deadline": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Registration Deadline"}, "categories": {"items": {"type": "integer"}, "title": "Categories", "type": "array"}, "ruleset": {"title": "Ruleset", "type": "object"}, "safety_protocols": {"$ref": "#/components/schemas/SafetyProtocolSchema"}, "is_active": {"title": "Is Active", "type": "boolean"}}, "required": ["id", "name", "description", "league_id", "start_date", "end_date", "location", "status", "registration_deadline", "categories", "ruleset", "safety_protocols", "is_active"], "title": "CompetitionOut", "type": "object"}, "LocationSchema": {"properties": {"venue": {"title": "Venue", "type": "string"}, "address": {"title": "Address", "type": "string"}, "city": {"title": "City", "type": "string"}, "country": {"title": "Country", "type": "string"}, "coordinates": {"anyOf": [{"additionalProperties": {"type": "number"}, "type": "object"}, {"type": "null"}], "title": "Coordinates"}, "venue_details": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Venue Details"}}, "required": ["venue", "address", "city", "country"], "title": "LocationSchema", "type": "object"}, "SafetyProtocolSchema": {"properties": {"general_guidelines": {"title": "General Guidelines", "type": "object"}, "emergency_contacts": {"items": {"type": "object"}, "title": "Emergency Contacts", "type": "array"}, "evacuation_plan": {"title": "Evacuation Plan", "type": "object"}, "medical_procedures": {"title": "Medical Procedures", "type": "object"}, "covid_protocols": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Covid Protocols"}}, "required": ["general_guidelines", "emergency_contacts", "evacuation_plan", "medical_procedures"], "title": "SafetyProtocolSchema", "type": "object"}, "UserResponseSchema": {"properties": {"id": {"title": "Id", "type": "integer"}, "email": {"title": "Email", "type": "string"}, "first_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "First Name"}, "last_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Last Name"}, "date_of_birth": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Date Of Birth"}, "phone_number": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Phone Number"}, "climbing_level": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Climbing Level"}}, "required": ["id", "email", "first_name", "last_name", "date_of_birth", "phone_number", "climbing_level"], "title": "UserResponseSchema", "type": "object"}, "PaginationSchema": {"properties": {"page": {"default": 1, "title": "Page", "type": "integer"}, "page_size": {"default": 20, "title": "Page Size", "type": "integer"}}, "title": "PaginationSchema", "type": "object"}, "RankingVisualizationSchema": {"properties": {"category_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "start_date": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Start Date"}, "end_date": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "End Date"}, "top_n": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 10, "title": "Top N"}, "page": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 1, "title": "Page"}, "page_size": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": 20, "title": "Page Size"}}, "title": "RankingVisualizationSchema", "type": "object"}, "RankingTimeSeriesSchema": {"properties": {"athlete_id": {"title": "Athlete Id", "type": "integer"}, "athlete_name": {"title": "Athlete Name", "type": "string"}, "dates": {"items": {"type": "string"}, "title": "Dates", "type": "array"}, "ranks": {"items": {"type": "integer"}, "title": "Ranks", "type": "array"}, "points": {"items": {"type": "integer"}, "title": "Points", "type": "array"}}, "required": ["athlete_id", "athlete_name", "dates", "ranks", "points"], "title": "RankingTimeSeriesSchema", "type": "object"}, "PointsDistributionSchema": {"properties": {"ranges": {"items": {"type": "string"}, "title": "Ranges", "type": "array"}, "counts": {"items": {"type": "integer"}, "title": "Counts", "type": "array"}}, "required": ["ranges", "counts"], "title": "PointsDistributionSchema", "type": "object"}, "CompetitionLevelStatsSchema": {"properties": {"level": {"title": "Level", "type": "string"}, "min_points": {"title": "Min Points", "type": "number"}, "max_points": {"title": "Max Points", "type": "number"}, "median_points": {"title": "Median Points", "type": "number"}, "q1_points": {"title": "Q1 Points", "type": "number"}, "q3_points": {"title": "Q3 Points", "type": "number"}}, "required": ["level", "min_points", "max_points", "median_points", "q1_points", "q3_points"], "title": "CompetitionLevelStatsSchema", "type": "object"}, "AdvancedStatsSchema": {"properties": {"athlete_id": {"title": "Athlete Id", "type": "integer"}, "athlete_name": {"title": "Athlete Name", "type": "string"}, "consistency_score": {"title": "Consistency Score", "type": "number"}, "improvement_rate": {"title": "Improvement Rate", "type": "number"}, "performance_vs_average": {"title": "Performance Vs Average", "type": "number"}, "level_distribution": {"title": "Level Distribution", "type": "object"}, "streak_info": {"title": "Streak Info", "type": "object"}, "percentile_rank": {"title": "Percentile Rank", "type": "number"}}, "required": ["athlete_id", "athlete_name", "consistency_score", "improvement_rate", "performance_vs_average", "level_distribution", "streak_info", "percentile_rank"], "title": "AdvancedStatsSchema", "type": "object"}, "ExportFormatSchema": {"properties": {"format": {"default": "csv", "title": "Format", "type": "string"}, "include_statistics": {"default": true, "title": "Include Statistics", "type": "boolean"}, "include_historical": {"default": false, "title": "Include Historical", "type": "boolean"}, "category_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}}, "title": "ExportFormatSchema", "type": "object"}, "LeagueSearchSchema": {"properties": {"query": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Query"}, "status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}, "start_date": {"anyOf": [{"format": "date", "type": "string"}, {"type": "null"}], "title": "Start Date"}, "end_date": {"anyOf": [{"format": "date", "type": "string"}, {"type": "null"}], "title": "End Date"}, "category_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "min_participants": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Min Participants"}, "has_active_competitions": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Has Active Competitions"}}, "title": "LeagueSearchSchema", "type": "object"}, "LeagueStatisticsSchema": {"properties": {"total_participants": {"title": "Total Participants", "type": "integer"}, "total_competitions": {"title": "Total Competitions", "type": "integer"}, "active_competitions": {"title": "Active Competitions", "type": "integer"}, "categories_distribution": {"additionalProperties": {"type": "integer"}, "title": "Categories Distribution", "type": "object"}, "average_participants_per_competition": {"title": "Average Participants Per Competition", "type": "number"}, "competition_frequency": {"additionalProperties": {"type": "integer"}, "title": "Competition Frequency", "type": "object"}, "participant_retention_rate": {"title": "Participant Retention Rate", "type": "number"}, "category_performance_stats": {"additionalProperties": {"type": "object"}, "title": "Category Performance Stats", "type": "object"}}, "required": ["total_participants", "total_competitions", "active_competitions", "categories_distribution", "average_participants_per_competition", "competition_frequency", "participant_retention_rate", "category_performance_stats"], "title": "LeagueStatisticsSchema", "type": "object"}, "BulkLeagueStatusUpdate": {"properties": {"league_ids": {"items": {"type": "integer"}, "title": "League Ids", "type": "array"}, "new_status": {"title": "New Status", "type": "string"}}, "required": ["league_ids", "new_status"], "title": "BulkLeagueStatusUpdate", "type": "object"}, "ErrorResponse": {"properties": {"success": {"default": false, "title": "Success", "type": "boolean"}, "error": {"title": "Error", "type": "string"}}, "required": ["error"], "title": "ErrorResponse", "type": "object"}, "CompetitionIn": {"properties": {"name": {"title": "Name", "type": "string"}, "description": {"title": "Description", "type": "string"}, "league_id": {"title": "League Id", "type": "integer"}, "start_date": {"format": "date-time", "title": "Start Date", "type": "string"}, "end_date": {"format": "date-time", "title": "End Date", "type": "string"}, "location": {"$ref": "#/components/schemas/LocationSchema"}, "registration_deadline": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Registration Deadline"}, "categories": {"items": {"type": "integer"}, "title": "Categories", "type": "array"}, "ruleset": {"title": "Ruleset", "type": "object"}, "safety_protocols": {"anyOf": [{"$ref": "#/components/schemas/SafetyProtocolSchema"}, {"type": "null"}]}}, "required": ["name", "description", "league_id", "start_date", "end_date", "location", "registration_deadline", "categories", "ruleset"], "title": "CompetitionIn", "type": "object"}, "AttemptSchema": {"properties": {"problem_number": {"title": "Problem Number", "type": "integer"}, "achieved_top": {"title": "Achieved Top", "type": "boolean"}, "top_attempts": {"title": "Top Attempts", "type": "integer"}, "achieved_zone": {"title": "Achieved Zone", "type": "boolean"}, "zone_attempts": {"title": "Zone Attempts", "type": "integer"}, "time_spent": {"title": "Time Spent", "type": "string"}}, "required": ["problem_number", "achieved_top", "top_attempts", "achieved_zone", "zone_attempts", "time_spent"], "title": "AttemptSchema", "type": "object"}, "CompetitionOverviewOut": {"properties": {"competition": {"$ref": "#/components/schemas/CompetitionOut"}, "rounds": {"items": {"$ref": "#/components/schemas/RoundOut"}, "title": "Rounds", "type": "array"}, "registrations_count": {"title": "Registrations Count", "type": "integer"}, "results_by_category": {"additionalProperties": {"items": {"$ref": "#/components/schemas/ResultOut"}, "type": "array"}, "title": "Results By Category", "type": "object"}, "appeals_count": {"title": "Appeals Count", "type": "integer"}, "status_summary": {"title": "Status Summary", "type": "object"}}, "required": ["competition", "rounds", "registrations_count", "results_by_category", "appeals_count", "status_summary"], "title": "CompetitionOverviewOut", "type": "object"}, "ResultOut": {"properties": {"id": {"title": "Id", "type": "integer"}, "athlete_id": {"title": "Athlete Id", "type": "integer"}, "category_id": {"title": "Category Id", "type": "integer"}, "round_id": {"title": "Round Id", "type": "integer"}, "ranking": {"title": "Ranking", "type": "integer"}, "score": {"title": "Score", "type": "object"}, "attempts": {"items": {"$ref": "#/components/schemas/AttemptSchema"}, "title": "Attempts", "type": "array"}, "disqualified": {"title": "Disqualified", "type": "boolean"}, "disqualification_reason": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Disqualification Reason"}, "formatted_score": {"title": "Formatted Score", "type": "object"}}, "required": ["id", "athlete_id", "category_id", "round_id", "ranking", "score", "attempts", "disqualified", "disqualification_reason", "formatted_score"], "title": "ResultOut", "type": "object"}, "RoundOut": {"properties": {"id": {"title": "Id", "type": "integer"}, "name": {"title": "Name", "type": "string"}, "order": {"title": "Order", "type": "integer"}, "number_of_problems": {"title": "Number Of Problems", "type": "integer"}, "time_limit": {"title": "Time Limit", "type": "integer"}, "format": {"title": "Format", "type": "string"}, "rules": {"title": "Rules", "type": "object"}, "competition_id": {"title": "Competition Id", "type": "integer"}}, "required": ["id", "name", "order", "number_of_problems", "time_limit", "format", "rules", "competition_id"], "title": "RoundOut", "type": "object"}, "SuccessResponse": {"properties": {"success": {"title": "Success", "type": "boolean"}, "message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Message"}}, "required": ["success"], "title": "SuccessResponse", "type": "object"}, "RegistrationOut": {"properties": {"id": {"title": "Id", "type": "integer"}, "athlete_id": {"title": "Athlete Id", "type": "integer"}, "category_id": {"title": "Category Id", "type": "integer"}, "status": {"title": "Status", "type": "string"}, "registration_date": {"format": "date-time", "title": "Registration Date", "type": "string"}, "check_in_time": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Check In Time"}, "bib_number": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Bib Number"}, "waiver_signed": {"title": "Waiver Signed", "type": "boolean"}, "medical_clearance": {"title": "Medical Clearance", "type": "boolean"}, "requirements_met": {"title": "Requirements Met", "type": "object"}}, "required": ["id", "athlete_id", "category_id", "status", "registration_date", "check_in_time", "bib_number", "waiver_signed", "medical_clearance", "requirements_met"], "title": "RegistrationOut", "type": "object"}, "RegistrationIn": {"properties": {"athlete_id": {"title": "Athlete Id", "type": "integer"}, "category_id": {"title": "Category Id", "type": "integer"}, "waiver_signed": {"default": false, "title": "Waiver Signed", "type": "boolean"}, "medical_clearance": {"default": false, "title": "Medical Clearance", "type": "boolean"}, "requirements_met": {"default": {}, "title": "Requirements Met", "type": "object"}}, "required": ["athlete_id", "category_id"], "title": "RegistrationIn", "type": "object"}, "ResultIn": {"properties": {"athlete_id": {"title": "Athlete Id", "type": "integer"}, "category_id": {"title": "Category Id", "type": "integer"}, "round_id": {"title": "Round Id", "type": "integer"}, "ranking": {"title": "Ranking", "type": "integer"}, "attempts": {"items": {"$ref": "#/components/schemas/AttemptSchema"}, "title": "Attempts", "type": "array"}, "disqualified": {"default": false, "title": "Disqualified", "type": "boolean"}, "disqualification_reason": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Disqualification Reason"}}, "required": ["athlete_id", "category_id", "round_id", "ranking", "attempts"], "title": "ResultIn", "type": "object"}, "AppealOut": {"properties": {"id": {"title": "Id", "type": "integer"}, "athlete_id": {"title": "Athlete Id", "type": "integer"}, "round_id": {"title": "Round Id", "type": "integer"}, "problem_number": {"title": "Problem Number", "type": "integer"}, "reason": {"title": "Reason", "type": "string"}, "evidence": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Evidence"}, "status": {"title": "Status", "type": "string"}, "submitted_at": {"format": "date-time", "title": "Submitted At", "type": "string"}, "decision": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Decision"}, "decided_by_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Decided By Id"}, "decided_at": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Decided At"}}, "required": ["id", "athlete_id", "round_id", "problem_number", "reason", "evidence", "status", "submitted_at", "decision", "decided_by_id", "decided_at"], "title": "AppealOut", "type": "object"}, "AppealIn": {"properties": {"athlete_id": {"title": "Athlete Id", "type": "integer"}, "round_id": {"title": "Round Id", "type": "integer"}, "problem_number": {"title": "Problem Number", "type": "integer"}, "reason": {"title": "Reason", "type": "string"}, "evidence": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Evidence"}}, "required": ["athlete_id", "round_id", "problem_number", "reason"], "title": "AppealIn", "type": "object"}, "RoundIn": {"properties": {"name": {"title": "Name", "type": "string"}, "order": {"title": "Order", "type": "integer"}, "number_of_problems": {"title": "Number Of Problems", "type": "integer"}, "time_limit": {"title": "Time Limit", "type": "integer"}, "format": {"title": "Format", "type": "string"}, "rules": {"default": {}, "title": "Rules", "type": "object"}}, "required": ["name", "order", "number_of_problems", "time_limit", "format"], "title": "RoundIn", "type": "object"}, "CompetitionSearchSchema": {"properties": {"query": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Query"}, "league_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "League Id"}, "status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}, "start_date": {"anyOf": [{"format": "date", "type": "string"}, {"type": "null"}], "title": "Start Date"}, "end_date": {"anyOf": [{"format": "date", "type": "string"}, {"type": "null"}], "title": "End Date"}, "location_city": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Location City"}, "category_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "has_available_registration": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Has Available Registration"}}, "title": "CompetitionSearchSchema", "type": "object"}, "CompetitionEventSchema": {"properties": {"id": {"title": "Id", "type": "integer"}, "name": {"title": "Name", "type": "string"}, "event_type": {"title": "Event Type", "type": "string"}, "start_time": {"format": "date-time", "title": "Start Time", "type": "string"}, "end_time": {"format": "date-time", "title": "End Time", "type": "string"}, "status": {"title": "Status", "type": "string"}, "location": {"title": "Location", "type": "object"}}, "required": ["id", "name", "event_type", "start_time", "end_time", "status", "location"], "title": "CompetitionEventSchema", "type": "object"}, "CompetitionLeagueSchema": {"properties": {"id": {"title": "Id", "type": "integer"}, "name": {"title": "Name", "type": "string"}}, "required": ["id", "name"], "title": "CompetitionLeagueSchema", "type": "object"}, "CompetitionOverviewSchema": {"properties": {"id": {"title": "Id", "type": "integer"}, "name": {"title": "Name", "type": "string"}, "status": {"title": "Status", "type": "string"}, "start_date": {"format": "date-time", "title": "Start Date", "type": "string"}, "end_date": {"format": "date-time", "title": "End Date", "type": "string"}, "location": {"title": "Location", "type": "object"}, "league": {"$ref": "#/components/schemas/CompetitionLeagueSchema"}, "events": {"anyOf": [{"items": {"$ref": "#/components/schemas/CompetitionEventSchema"}, "type": "array"}, {"type": "null"}], "title": "Events"}, "registrations": {"anyOf": [{"items": {"$ref": "#/components/schemas/CompetitionRegistrationOverviewSchema"}, "type": "array"}, {"type": "null"}], "title": "Registrations"}, "results": {"anyOf": [{"items": {"$ref": "#/components/schemas/CompetitionResultOverviewSchema"}, "type": "array"}, {"type": "null"}], "title": "Results"}}, "required": ["id", "name", "status", "start_date", "end_date", "location", "league"], "title": "CompetitionOverviewSchema", "type": "object"}, "CompetitionRegistrationOverviewSchema": {"properties": {"athlete_id": {"title": "Athlete Id", "type": "integer"}, "athlete_first_name": {"title": "Athlete First Name", "type": "string"}, "athlete_last_name": {"title": "Athlete Last Name", "type": "string"}, "category_name": {"title": "Category Name", "type": "string"}, "waiver_signed": {"title": "Waiver Signed", "type": "boolean"}, "medical_clearance": {"title": "Medical Clearance", "type": "boolean"}}, "required": ["athlete_id", "athlete_first_name", "athlete_last_name", "category_name", "waiver_signed", "medical_clearance"], "title": "CompetitionRegistrationOverviewSchema", "type": "object"}, "CompetitionResultOverviewSchema": {"properties": {"athlete_id": {"title": "Athlete Id", "type": "integer"}, "athlete_first_name": {"title": "Athlete First Name", "type": "string"}, "athlete_last_name": {"title": "Athlete Last Name", "type": "string"}, "category_name": {"title": "Category Name", "type": "string"}, "ranking": {"title": "Ranking", "type": "integer"}, "score": {"title": "Score", "type": "object"}}, "required": ["athlete_id", "athlete_first_name", "athlete_last_name", "category_name", "ranking", "score"], "title": "CompetitionResultOverviewSchema", "type": "object"}, "CompetitionAnalyticsSchema": {"properties": {"total_registrations": {"title": "Total Registrations", "type": "integer"}, "registrations_by_category": {"additionalProperties": {"type": "integer"}, "title": "Registrations By Category", "type": "object"}, "average_score_by_category": {"additionalProperties": {"type": "number"}, "title": "Average Score By Category", "type": "object"}, "participation_trends": {"additionalProperties": {"type": "integer"}, "title": "Participation Trends", "type": "object"}, "completion_rate": {"title": "Completion Rate", "type": "number"}, "appeal_statistics": {"additionalProperties": {"type": "integer"}, "title": "Appeal Statistics", "type": "object"}, "safety_incidents": {"additionalProperties": {"type": "integer"}, "title": "Safety Incidents", "type": "object"}, "performance_distribution": {"additionalProperties": {"additionalProperties": {"type": "number"}, "type": "object"}, "title": "Performance Distribution", "type": "object"}}, "required": ["total_registrations", "registrations_by_category", "average_score_by_category", "participation_trends", "completion_rate", "appeal_statistics", "safety_incidents", "performance_distribution"], "title": "CompetitionAnalyticsSchema", "type": "object"}, "BulkCompetitionScheduleUpdate": {"properties": {"competition_ids": {"items": {"type": "integer"}, "title": "Competition Ids", "type": "array"}, "start_date": {"format": "date", "title": "Start Date", "type": "string"}, "end_date": {"format": "date", "title": "End Date", "type": "string"}, "reason": {"title": "Reason", "type": "string"}}, "required": ["competition_ids", "start_date", "end_date", "reason"], "title": "BulkCompetitionScheduleUpdate", "type": "object"}, "AppealSchema": {"properties": {"reason": {"title": "Reason", "type": "string"}, "evidence": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Evidence"}, "requested_score": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Requested Score"}}, "required": ["reason"], "title": "AppealSchema", "type": "object"}, "AppealResolutionSchema": {"properties": {"resolution": {"title": "Resolution", "type": "string"}, "notes": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Notes"}, "accepted": {"default": false, "title": "Accepted", "type": "boolean"}, "corrected_score": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Corrected Score"}, "revert_to_status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Revert To Status"}}, "required": ["resolution"], "title": "AppealResolutionSchema", "type": "object"}, "AreaSchema": {"properties": {"name": {"title": "Name", "type": "string"}, "type": {"title": "Type", "type": "string"}, "capacity": {"title": "Capacity", "type": "integer"}, "equipment": {"items": {"type": "object"}, "title": "Equipment", "type": "array"}, "availability": {"additionalProperties": {"items": {"format": "date-time", "type": "string"}, "type": "array"}, "title": "Availability", "type": "object"}, "requirements": {"title": "Requirements", "type": "object"}}, "required": ["name", "type", "capacity", "equipment", "availability", "requirements"], "title": "AreaSchema", "type": "object"}, "RouteSchema": {"properties": {"identifier": {"title": "Identifier", "type": "string"}, "grade": {"title": "Grade", "type": "string"}, "style": {"title": "Style", "type": "string"}, "height": {"title": "Height", "type": "number"}, "holds_count": {"title": "Holds Count", "type": "integer"}, "setter": {"title": "Setter", "type": "string"}, "safety_requirements": {"title": "Safety Requirements", "type": "object"}}, "required": ["identifier", "grade", "style", "height", "holds_count", "setter", "safety_requirements"], "title": "RouteSchema", "type": "object"}, "ScheduleRequestSchema": {"properties": {"area_name": {"title": "Area Name", "type": "string"}, "event_type": {"title": "Event Type", "type": "string"}, "start_time": {"format": "date-time", "title": "Start Time", "type": "string"}, "end_time": {"format": "date-time", "title": "End Time", "type": "string"}, "capacity_required": {"title": "Capacity Required", "type": "integer"}}, "required": ["area_name", "event_type", "start_time", "end_time", "capacity_required"], "title": "ScheduleRequestSchema", "type": "object"}, "AvailabilityRequestSchema": {"properties": {"area_name": {"title": "Area Name", "type": "string"}, "duration_minutes": {"title": "Duration Minutes", "type": "integer"}, "start_date": {"format": "date-time", "title": "Start Date", "type": "string"}, "end_date": {"format": "date-time", "title": "End Date", "type": "string"}}, "required": ["area_name", "duration_minutes", "start_date", "end_date"], "title": "AvailabilityRequestSchema", "type": "object"}, "EventScheduleSchema": {"properties": {"event_type": {"title": "Event Type", "type": "string"}, "start_time": {"format": "date-time", "title": "Start Time", "type": "string"}, "end_time": {"format": "date-time", "title": "End Time", "type": "string"}, "area_name": {"title": "Area Name", "type": "string"}, "capacity": {"title": "Capacity", "type": "integer"}, "category_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "isolation_required": {"default": false, "title": "Isolation Required", "type": "boolean"}, "duration": {"format": "duration", "title": "Duration", "type": "string"}}, "required": ["event_type", "start_time", "end_time", "area_name", "capacity"], "title": "EventScheduleSchema", "type": "object"}, "ScheduleSuggestionSchema": {"properties": {"event_type": {"title": "Event Type", "type": "string"}, "duration": {"format": "duration", "title": "Duration", "type": "string"}, "capacity": {"title": "Capacity", "type": "integer"}, "category_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "isolation_required": {"default": false, "title": "Isolation Required", "type": "boolean"}, "preferred_time_range": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Preferred Time Range"}}, "required": ["event_type", "duration", "capacity"], "title": "ScheduleSuggestionSchema", "type": "object"}, "DateRangeSchema": {"properties": {"start_date": {"format": "date-time", "title": "Start Date", "type": "string"}, "end_date": {"format": "date-time", "title": "End Date", "type": "string"}}, "required": ["start_date", "end_date"], "title": "DateRangeSchema", "type": "object"}, "StaffAssignmentSchema": {"properties": {"user_id": {"title": "User Id", "type": "integer"}, "role": {"title": "Role", "type": "string"}, "area": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Area"}, "start_time": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Start Time"}, "end_time": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "End Time"}, "responsibilities": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Responsibilities"}, "backup_staff_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Backup Staff Id"}}, "required": ["user_id", "role"], "title": "StaffAssignmentSchema", "type": "object"}, "StaffRequirementSchema": {"properties": {"role": {"title": "Role", "type": "string"}, "count": {"title": "Count", "type": "integer"}, "area": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Area"}, "required_certifications": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Required Certifications"}, "required_experience": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Required Experience"}}, "required": ["role", "count"], "title": "StaffRequirementSchema", "type": "object"}, "SafetyCheckRequest": {"properties": {"check_type": {"title": "Check Type", "type": "string"}, "location": {"title": "Location", "type": "string"}, "notes": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Notes"}}, "required": ["check_type", "location"], "title": "SafetyCheckRequest", "type": "object"}, "SafetyIncidentReport": {"properties": {"incident_type": {"title": "Incident Type", "type": "string"}, "severity": {"title": "Severity", "type": "string"}, "description": {"title": "Description", "type": "string"}, "location": {"title": "Location", "type": "object"}, "affected_areas": {"items": {"type": "string"}, "title": "Affected Areas", "type": "array"}, "immediate_actions": {"items": {"type": "string"}, "title": "Immediate Actions", "type": "array"}}, "required": ["incident_type", "severity", "description", "location", "affected_areas", "immediate_actions"], "title": "SafetyIncidentReport", "type": "object"}, "SafetyRequirementQuery": {"properties": {"event_type": {"title": "Event Type", "type": "string"}, "location": {"title": "Location", "type": "string"}}, "required": ["event_type", "location"], "title": "SafetyRequirementQuery", "type": "object"}, "EventOut": {"properties": {"name": {"title": "Name", "type": "string"}, "event_type": {"title": "Event Type", "type": "string"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "start_time": {"format": "date-time", "title": "Start Time", "type": "string"}, "end_time": {"format": "date-time", "title": "End Time", "type": "string"}, "isolation_start": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Isolation Start"}, "isolation_end": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Isolation End"}, "location": {"$ref": "#/components/schemas/LocationSchema"}, "route_info": {"anyOf": [{"$ref": "#/components/schemas/RouteInfoSchema"}, {"type": "null"}]}, "categories": {"items": {"type": "integer"}, "title": "Categories", "type": "array"}, "scoring_rules": {"title": "Scoring Rules", "type": "object"}, "safety_requirements": {"title": "Safety Requirements", "type": "object"}, "id": {"title": "Id", "type": "integer"}, "competition_id": {"title": "Competition Id", "type": "integer"}, "status": {"title": "Status", "type": "string"}, "is_active": {"title": "Is Active", "type": "boolean"}, "starting_order": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Starting Order"}, "created_at": {"format": "date-time", "title": "Created At", "type": "string"}, "updated_at": {"format": "date-time", "title": "Updated At", "type": "string"}}, "required": ["name", "event_type", "start_time", "end_time", "location", "categories", "scoring_rules", "safety_requirements", "id", "competition_id", "status", "is_active", "created_at", "updated_at"], "title": "EventOut", "type": "object"}, "RouteInfoSchema": {"properties": {"grade": {"title": "Grade", "type": "string"}, "style": {"title": "Style", "type": "string"}, "height": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Height"}, "holds_count": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Holds Count"}, "setter_notes": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Setter Notes"}, "safety_notes": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Safety Notes"}}, "required": ["grade", "style"], "title": "RouteInfoSchema", "type": "object"}, "EventCreate": {"properties": {"name": {"title": "Name", "type": "string"}, "event_type": {"title": "Event Type", "type": "string"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "start_time": {"format": "date-time", "title": "Start Time", "type": "string"}, "end_time": {"format": "date-time", "title": "End Time", "type": "string"}, "isolation_start": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Isolation Start"}, "isolation_end": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Isolation End"}, "location": {"$ref": "#/components/schemas/LocationSchema"}, "route_info": {"anyOf": [{"$ref": "#/components/schemas/RouteInfoSchema"}, {"type": "null"}]}, "categories": {"items": {"type": "integer"}, "title": "Categories", "type": "array"}, "scoring_rules": {"title": "Scoring Rules", "type": "object"}, "safety_requirements": {"title": "Safety Requirements", "type": "object"}, "competition_id": {"title": "Competition Id", "type": "integer"}}, "required": ["name", "event_type", "start_time", "end_time", "location", "categories", "scoring_rules", "safety_requirements", "competition_id"], "title": "EventCreate", "type": "object"}, "EventUpdate": {"properties": {"name": {"title": "Name", "type": "string"}, "event_type": {"title": "Event Type", "type": "string"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "start_time": {"format": "date-time", "title": "Start Time", "type": "string"}, "end_time": {"format": "date-time", "title": "End Time", "type": "string"}, "isolation_start": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Isolation Start"}, "isolation_end": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Isolation End"}, "location": {"$ref": "#/components/schemas/LocationSchema"}, "route_info": {"anyOf": [{"$ref": "#/components/schemas/RouteInfoSchema"}, {"type": "null"}]}, "categories": {"items": {"type": "integer"}, "title": "Categories", "type": "array"}, "scoring_rules": {"title": "Scoring Rules", "type": "object"}, "safety_requirements": {"title": "Safety Requirements", "type": "object"}}, "required": ["name", "event_type", "start_time", "end_time", "location", "categories", "scoring_rules", "safety_requirements"], "title": "EventUpdate", "type": "object"}, "ParticipationSchema": {"properties": {"athlete_id": {"title": "Athlete Id", "type": "integer"}, "category_id": {"title": "Category Id", "type": "integer"}, "starting_position": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Starting Position"}}, "required": ["athlete_id", "category_id"], "title": "ParticipationSchema", "type": "object"}, "IncidentSchema": {"properties": {"incident_time": {"format": "date-time", "title": "Incident Time", "type": "string"}, "incident_type": {"title": "Incident Type", "type": "string"}, "description": {"title": "Description", "type": "string"}, "severity": {"title": "Severity", "type": "string"}}, "required": ["incident_time", "incident_type", "description", "severity"], "title": "IncidentSchema", "type": "object"}, "ScheduleChangeSchema": {"properties": {"new_start": {"format": "date-time", "title": "New Start", "type": "string"}, "new_end": {"format": "date-time", "title": "New End", "type": "string"}, "reason": {"title": "Reason", "type": "string"}}, "required": ["new_start", "new_end", "reason"], "title": "ScheduleChangeSchema", "type": "object"}, "EventSearchSchema": {"properties": {"query": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Query"}, "competition_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Competition Id"}, "event_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Event Type"}, "start_date": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Start Date"}, "end_date": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "End Date"}, "category_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Category Id"}, "status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}}, "title": "EventSearchSchema", "type": "object"}, "EventAnalyticsSchema": {"properties": {"total_participants": {"title": "Total Participants", "type": "integer"}, "participants_by_category": {"additionalProperties": {"type": "integer"}, "title": "Participants By Category", "type": "object"}, "incidents_by_severity": {"additionalProperties": {"type": "integer"}, "title": "Incidents By Severity", "type": "object"}, "schedule_changes": {"items": {"type": "object"}, "title": "Schedule Changes", "type": "array"}, "participation_rate": {"title": "Participation Rate", "type": "number"}, "average_duration": {"title": "Average Duration", "type": "number"}, "status_distribution": {"additionalProperties": {"type": "integer"}, "title": "Status Distribution", "type": "object"}}, "required": ["total_participants", "participants_by_category", "incidents_by_severity", "schedule_changes", "participation_rate", "average_duration", "status_distribution"], "title": "EventAnalyticsSchema", "type": "object"}, "GymOut": {"properties": {"name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}, "city": {"title": "City", "type": "string"}, "country": {"title": "Country", "type": "string"}, "contact_info": {"title": "Contact Info", "type": "object"}, "facilities": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Facilities"}, "operating_hours": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Operating Hours"}, "climbing_areas": {"anyOf": [{"items": {"type": "object"}, "type": "array"}, {"type": "null"}], "title": "Climbing Areas"}, "id": {"title": "Id", "type": "integer"}, "is_active": {"title": "Is Active", "type": "boolean"}}, "required": ["name", "address", "city", "country", "contact_info", "id", "is_active"], "title": "GymOut", "type": "object"}, "GymSchema": {"properties": {"name": {"title": "Name", "type": "string"}, "address": {"title": "Address", "type": "string"}, "city": {"title": "City", "type": "string"}, "country": {"title": "Country", "type": "string"}, "contact_info": {"title": "Contact Info", "type": "object"}, "facilities": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Facilities"}, "operating_hours": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Operating Hours"}, "climbing_areas": {"anyOf": [{"items": {"type": "object"}, "type": "array"}, {"type": "null"}], "title": "Climbing Areas"}}, "required": ["name", "address", "city", "country", "contact_info"], "title": "GymSchema", "type": "object"}, "RegistrationStatusSchema": {"properties": {"enabled": {"title": "Enabled", "type": "boolean"}, "message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Message"}}, "required": ["enabled"], "title": "RegistrationStatusSchema", "type": "object"}, "UserSchema": {"properties": {"email": {"title": "Email", "type": "string"}, "password": {"title": "Password", "type": "string"}, "first_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "First Name"}, "last_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Last Name"}, "date_of_birth": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Date Of Birth"}, "phone_number": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Phone Number"}, "climbing_level": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Climbing Level"}}, "required": ["email", "password"], "title": "UserSchema", "type": "object"}, "TokenSchema": {"properties": {"access": {"title": "Access", "type": "string"}, "refresh": {"title": "Refresh", "type": "string"}}, "required": ["access", "refresh"], "title": "TokenSchema", "type": "object"}, "AuthSchema": {"properties": {"email": {"title": "Email", "type": "string"}, "password": {"title": "Password", "type": "string"}}, "required": ["email", "password"], "title": "AuthSchema", "type": "object"}, "PasswordResetRequestSchema": {"properties": {"email": {"title": "Email", "type": "string"}}, "required": ["email"], "title": "PasswordResetRequestSchema", "type": "object"}, "PasswordResetConfirmSchema": {"properties": {"email": {"title": "Email", "type": "string"}, "token": {"title": "Token", "type": "string"}, "new_password": {"title": "New Password", "type": "string"}}, "required": ["email", "token", "new_password"], "title": "PasswordResetConfirmSchema", "type": "object"}, "EmailVerificationSchema": {"properties": {"token": {"title": "Token", "type": "string"}}, "required": ["token"], "title": "EmailVerificationSchema", "type": "object"}, "ProfileUpdateSchema": {"properties": {"first_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "First Name"}, "last_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Last Name"}, "date_of_birth": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Date Of Birth"}, "phone_number": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Phone Number"}, "climbing_level": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Climbing Level"}, "avatar": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Avatar"}}, "title": "ProfileUpdateSchema", "type": "object"}, "RoleAssignmentSchema": {"properties": {"role_name": {"title": "Role Name", "type": "string"}}, "required": ["role_name"], "title": "RoleAssignmentSchema", "type": "object"}, "UserLeagueResponseSchema": {"properties": {"leagues_as_athlete": {"items": {"$ref": "#/components/schemas/LeagueOut"}, "title": "Leagues As Athlete", "type": "array"}, "leagues_as_official": {"items": {"$ref": "#/components/schemas/LeagueOut"}, "title": "Leagues As Official", "type": "array"}, "total_competitions": {"title": "Total Competitions", "type": "integer"}, "current_rankings": {"title": "Current Rankings", "type": "object"}}, "required": ["leagues_as_athlete", "leagues_as_official", "total_competitions", "current_rankings"], "title": "UserLeagueResponseSchema", "type": "object"}, "UserLeagueSchema": {"properties": {"league_id": {"title": "League Id", "type": "integer"}, "role": {"title": "Role", "type": "string"}, "categories": {"items": {"type": "string"}, "title": "Categories", "type": "array"}}, "required": ["league_id", "role", "categories"], "title": "UserLeagueSchema", "type": "object"}, "AuditLogSchema": {"properties": {"id": {"title": "Id", "type": "integer"}, "user_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "User Id"}, "action": {"title": "Action", "type": "string"}, "details": {"title": "Details", "type": "object"}, "ip_address": {"title": "Ip Address", "type": "string"}, "timestamp": {"title": "Timestamp", "type": "string"}}, "required": ["id", "user_id", "action", "details", "ip_address", "timestamp"], "title": "AuditLogSchema", "type": "object"}, "AuditLogFilterSchema": {"properties": {"user_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "User Id"}, "action": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Action"}, "start_date": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Start Date"}, "end_date": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "End Date"}, "ip_address": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Ip Address"}}, "title": "AuditLogFilterSchema", "type": "object"}}, "securitySchemes": {"JWTAuth": {"type": "http", "scheme": "bearer"}, "CompetitionRoleAuth": {"type": "http", "scheme": "bearer"}}}, "servers": []}